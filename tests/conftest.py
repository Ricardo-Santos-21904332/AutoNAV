"""This file contains the fixtures needed for the tests."""

import os

import pytest
from autonav.file_handlers import readpathfile
from numpy import array, insert


@pytest.fixture(scope="session")
def default_values():
    """This fixture defines the default values to be used in the algorithm tests."""
    ROOT_DIR = os.path.dirname(os.path.realpath(__file__))
    filename = ROOT_DIR + "/path_files/Path_small.txt"
    destinations = readpathfile(filename)
    N = 8  # Number of anchors
    B = 200  # Area border in meters
    K = 50  # Number of measurement samples
    a_i = array(
        [
            [0, 0, 0],
            [0, B, 0],
            [B / 2, 0, 0],
            [B / 2, B, 0],
            [0, 0, B / 8],
            [0, B, B / 8],
            [B / 2, 0, B / 8],
            [B / 2, B, B / 8],
        ]
    ).T
    initial_uav_position = [10, 10, 5]
    return [a_i, N, K, destinations, initial_uav_position]


@pytest.fixture(scope="session")
def ideal_trajectory():
    """This fixture contains the ideal trajectory for the plots.py tests."""
    ROOT_DIR = os.path.dirname(os.path.realpath(__file__))
    filename = ROOT_DIR + "/path_files/Path_small.txt"
    ideal_trajectory = readpathfile(filename)
    ideal_trajectory = insert(ideal_trajectory, 0, [10, 10, 5], axis=0)
    return ideal_trajectory


@pytest.fixture(scope="session")
def seeds():
    """This fixture contains the seeds for the GTRS and WLS tests."""
    return [
        5,
        10,
        20,
    ]


@pytest.fixture(scope="session")
def metrics_trajectories():
    """This fixture contains the trajectories for the metrics.py tests."""
    estimated_trajectory = array(
        [
            [9.99999962, 9.99999996, 4.99999754],
            [11.99410947, 9.84660779, 5.00000705],
            [13.98821739, 9.69321436, 5.00000066],
            [15.98232633, 9.53982188, 5.0000055],
            [17.97643436, 9.38642838, 4.99999871],
            [19.97054325, 9.23303628, 5.00000696],
            [21.96465149, 9.07964328, 5.00000546],
            [23.95875955, 8.92624995, 5.00000067],
            [25.95286755, 8.77285661, 4.9999958],
            [27.94697505, 8.61946163, 4.99997503],
            [29.94108338, 8.46607013, 4.99998826],
        ]
    )
    true_trajectory = array(
        [
            [10.0, 10.0, 5.0],
            [11.99410897, 9.846607, 5.00000008],
            [13.98821794, 9.69321398, 4.99999985],
            [15.98232691, 9.53982097, 4.99999983],
            [17.97643588, 9.38642795, 4.99999964],
            [19.97054485, 9.23303494, 4.99999969],
            [21.96465382, 9.0796419, 4.99999944],
            [23.95876279, 8.92624886, 4.99999923],
            [25.95287175, 8.77285584, 4.99999921],
            [27.94698072, 8.61946283, 4.99999938],
            [29.9410897, 8.46606991, 5.00000044],
        ]
    )
    return [estimated_trajectory, true_trajectory]


@pytest.fixture(scope="session")
def expected_trajectories_gtrs_sigma_0():
    """This fixture defines the expected GTRS trajectories for sigma = 0."""
    expected_estimated_trajectory = array(
        [
            [9.99999962, 9.99999996, 4.99999754],
            [11.96116071, 9.60776772, 4.99999721],
            [13.92232185, 9.21553558, 4.99999791],
            [15.88348199, 8.82330229, 4.999986],
            [17.84464418, 8.4310719, 5.00000478],
            [19.80580439, 8.03883851, 4.99999227],
            [21.7669659, 7.64660808, 5.00000907],
            [23.72812616, 7.25437476, 4.99999755],
            [25.68928652, 6.8621417, 4.99998893],
            [27.65044726, 6.4699106, 4.99999824],
            [29.61160763, 6.07767839, 4.99999728],
            [31.57276764, 5.68544437, 4.99998068],
            [33.07008382, 5.38598328, 4.99999949],
            [33.54487575, 5.29102508, 5.00000119],
            [33.81479041, 5.23704155, 4.99999637],
            [33.99385789, 5.20122822, 4.99999784],
            [34.12290389, 5.17541767, 4.99998662],
            [34.24102725, 7.17192767, 5.00000128],
            [34.35915046, 9.16843643, 5.00000358],
            [34.47727341, 11.16494388, 4.99999259],
            [34.59539692, 13.16145365, 5.00000795],
            [34.71352035, 15.15796275, 5.0000136],
            [34.83164322, 17.15447008, 4.99999528],
            [34.89163075, 18.16836999, 4.99999724],
            [34.91648546, 18.58846157, 4.99999418],
            [34.93124667, 18.83795218, 4.9999954],
            [34.9412509, 19.00704167, 4.9999953],
            [34.97057627, 21.0002213, 4.99999274],
            [34.97793246, 21.50016542, 5.00000492],
            [34.98206936, 21.78138256, 4.99998618],
            [34.98480106, 21.96703143, 4.99999182],
            [34.98676396, 22.10042423, 4.99999836],
            [33.41816758, 23.34119101, 4.99999199],
            [31.84957187, 24.58195877, 5.00000204],
            [30.28097588, 25.82272609, 5.00000695],
            [28.71237982, 27.0634932, 5.00001071],
            [27.14378235, 28.30425925, 4.9999971],
            [26.41131343, 28.88364661, 5.00000842],
            [26.09386208, 29.13474974, 4.99998995],
            [25.90316202, 29.28559606, 5.00000505],
        ]
    )
    expected_true_trajectory = array(
        [
            [10.0, 10.0, 5.0],
            [11.96116135, 9.60776774, 5.00000019],
            [13.92232271, 9.21553548, 5.00000043],
            [15.88348406, 8.82330321, 5.00000062],
            [17.84464544, 8.43107107, 5.00000206],
            [19.80580677, 8.03883872, 5.00000151],
            [21.76696814, 7.64660653, 5.00000251],
            [23.72812945, 7.25437408, 5.00000117],
            [25.68929081, 6.86214181, 5.00000159],
            [27.6504522, 6.46990974, 5.00000393],
            [29.61161355, 6.07767746, 5.0000044],
            [31.5727749, 5.68544522, 5.00000538],
            [33.07009182, 5.38598275, 5.00001383],
            [33.54488402, 5.2910243, 5.00001395],
            [33.81479892, 5.23704128, 5.00001373],
            [33.9938665, 5.20122782, 5.00001428],
            [34.12291273, 5.1754186, 5.00001456],
            [34.24103613, 7.17192727, 5.00001636],
            [34.35915954, 9.16843593, 5.00001616],
            [34.47728299, 11.1649446, 5.0000155],
            [34.59540654, 13.16145326, 5.00001717],
            [34.71353011, 15.15796192, 5.00001485],
            [34.83165376, 17.15447057, 5.00000925],
            [34.89164151, 18.16837059, 5.00001093],
            [34.91649645, 18.5884625, 5.00001156],
            [34.93125771, 18.83795313, 5.00001259],
            [34.94126201, 19.0070427, 5.00001326],
            [34.97058802, 21.00022293, 5.00001561],
            [34.97794394, 21.50016639, 5.00001742],
            [34.98208159, 21.7813848, 5.0000165],
            [34.98481321, 21.96703345, 5.0000186],
            [34.98677593, 22.1004259, 5.00001966],
            [33.41817897, 23.34119323, 5.00001992],
            [31.84958202, 24.58196058, 5.00002141],
            [30.28098492, 25.82272773, 5.00002094],
            [28.71238766, 27.0634947, 5.00001888],
            [27.14379018, 28.30426137, 5.00001435],
            [26.41132002, 28.88364832, 5.00001534],
            [26.09387005, 29.13475225, 5.00001345],
            [25.90316866, 29.28559798, 5.0000152],
        ]
    )
    return [
        expected_estimated_trajectory,
        expected_true_trajectory,
    ]


@pytest.fixture(scope="session")
def expected_trajectories_gtrs_sigma_1():
    """This fixture defines the expected GTRS trajectories for sigma = 1."""
    expected_estimated_trajectory = array(
        [
            [10.00930112, 10.11974317, 5.03590142],
            [11.97427759, 9.5486463, 4.88177854],
            [13.74242476, 9.25787825, 4.8657601],
            [15.74617403, 8.92943158, 5.10165607],
            [17.93724489, 8.31422023, 5.12123819],
            [19.87344384, 8.08957262, 5.13785152],
            [21.84039295, 7.83703433, 4.81145407],
            [23.60353808, 7.04617318, 5.0219039],
            [25.56340237, 6.91695865, 4.39482172],
            [27.61794754, 6.3300552, 4.8827867],
            [29.67607724, 6.15634883, 4.94099597],
            [31.56651921, 5.56668802, 5.5329315],
            [33.03220414, 5.32138176, 5.23458169],
            [33.49007959, 5.41223583, 5.18051586],
            [33.96550861, 5.20964921, 5.49995868],
            [33.99928719, 5.30510068, 4.62005905],
            [34.14472383, 5.22449482, 4.65731353],
            [34.52814871, 7.33251027, 4.43731015],
            [34.52531579, 9.24079886, 5.21394689],
            [34.35420898, 11.12104198, 4.61242967],
            [34.64330255, 13.29394835, 4.92211525],
            [34.67963484, 15.2617934, 5.47839183],
            [34.7872703, 16.95854208, 4.89680512],
            [35.03895113, 18.40382052, 4.97803748],
            [34.86999202, 18.63847656, 4.32796553],
            [34.86297063, 19.00397162, 5.13788919],
            [34.99160005, 19.02051837, 5.41277957],
            [35.02852289, 21.06072186, 5.07896776],
            [34.79425787, 21.44564048, 4.59764087],
            [35.024751, 21.85638893, 4.81964348],
            [34.87749931, 21.91045237, 4.98639399],
            [35.01482569, 22.22644923, 5.50116526],
            [33.54330252, 23.41634033, 4.39744475],
            [32.05836167, 24.48062534, 4.727215],
            [30.18610851, 25.57766014, 4.99805555],
            [28.75232239, 26.98927392, 5.24075716],
            [27.22820489, 28.37966403, 4.84962141],
            [26.39780993, 29.02200476, 5.12084784],
            [26.02149672, 29.17135781, 4.65347983],
            [26.0373089, 29.26013789, 4.62281133],
        ]
    )
    expected_true_trajectory = array(
        [
            [10.0, 10.0, 5.0],
            [11.95930455, 9.59860522, 4.99718528],
            [13.92136138, 9.21100815, 5.00725911],
            [15.88237217, 8.81821899, 5.01964274],
            [17.84195249, 8.41829656, 5.00929657],
            [19.80521174, 8.03695876, 4.99534678],
            [21.76467776, 7.63674125, 4.97748975],
            [23.71956829, 7.21529314, 5.00549869],
            [25.68808752, 6.86185615, 5.00171521],
            [27.64419679, 6.46449041, 5.12716242],
            [29.61226336, 6.10989564, 5.15841167],
            [31.56657961, 5.68542079, 5.18007099],
            [33.07752705, 5.43604243, 4.94554762],
            [33.57135017, 5.35539091, 4.88667877],
            [33.86872113, 5.27420321, 4.85112712],
            [34.01974912, 5.24359599, 4.7781369],
            [34.15897883, 5.20114717, 4.83099829],
            [34.27452387, 7.19726992, 4.87729412],
            [34.34889699, 9.19391774, 4.96598521],
            [34.43703167, 11.19157996, 4.92626166],
            [34.58197663, 13.18442314, 5.01325012],
            [34.68820009, 15.18146561, 5.03644397],
            [34.82243901, 17.16686172, 4.83598895],
            [34.90355907, 18.32665868, 4.87534018],
            [34.8957844, 18.64525725, 4.87972392],
            [34.92054933, 18.90461085, 5.00773828],
            [34.93793188, 19.03095975, 4.99024667],
            [34.94213097, 21.02028213, 4.78390028],
            [34.93521027, 21.49082247, 4.7647398],
            [34.97684014, 21.80533169, 4.84615317],
            [34.9732574, 21.97087083, 4.87226],
            [34.99004761, 22.12020654, 4.87412487],
            [33.41137223, 23.34558116, 4.79512427],
            [31.82965656, 24.56448657, 4.90668196],
            [30.25488224, 25.79590115, 4.96754237],
            [28.73305422, 27.09360649, 4.96811296],
            [27.17506635, 28.3436789, 4.86814907],
            [26.40656784, 28.90252598, 4.92001402],
            [26.10774247, 29.11160289, 4.89417903],
            [25.93406082, 29.25249414, 4.95309669],
        ]
    )
    return [
        expected_estimated_trajectory,
        expected_true_trajectory,
    ]


@pytest.fixture(scope="session")
def expected_trajectories_wls_sigma_0():
    """This fixture defines the expected WLS trajectories for sigma = 0."""
    expected_estimated_trajectory = array(
        [
            [10.0, 10.0, 5.0],
            [11.9612, 9.6078, 5.0],
            [13.9224, 9.2156, 5.0],
            [15.8836, 8.8234, 5.0],
            [17.8448, 8.4312, 5.0],
            [19.806, 8.039, 5.0],
            [21.7672, 7.6467, 5.0],
            [23.7284, 7.2544, 4.9999],
            [25.6896, 6.8622, 4.9999],
            [27.6508, 6.4699, 4.9999],
            [29.612, 6.0777, 4.9999],
            [31.5732, 5.6854, 4.9999],
            [33.0701, 5.386, 4.9999],
            [33.5448, 5.291, 4.9999],
            [33.8148, 5.237, 4.9999],
            [33.9938, 5.2012, 4.9999],
            [34.123, 5.1754, 4.9999],
            [34.2411, 7.1719, 4.9999],
            [34.3592, 9.1684, 4.9999],
            [34.4773, 11.1649, 4.9999],
            [34.5953, 13.1614, 4.9999],
            [34.7136, 15.1579, 4.9999],
            [34.8316, 17.1544, 4.9999],
            [34.8916, 18.1684, 4.9999],
            [34.9165, 18.5885, 4.9999],
            [34.9314, 18.8379, 4.9999],
            [34.9413, 19.0071, 4.9999],
            [34.9706, 21.0001, 4.9999],
            [34.978, 21.5001, 4.9999],
            [34.9821, 21.7813, 4.9999],
            [34.9848, 21.967, 4.9999],
            [34.9868, 22.1004, 4.9999],
            [33.4182, 23.3412, 4.9999],
            [31.8497, 24.582, 4.9999],
            [30.2811, 25.8227, 4.9999],
            [28.7125, 27.0635, 4.9999],
            [27.1439, 28.3042, 4.9999],
            [26.4114, 28.8836, 4.9999],
            [26.0939, 29.1347, 4.9999],
            [25.9032, 29.2856, 4.9999],
        ]
    )
    expected_true_trajectory = array(
        [
            [10.0, 10.0, 5.0],
            [11.9612, 9.6078, 5.0],
            [13.9224, 9.2156, 5.0],
            [15.8836, 8.8234, 5.0],
            [17.8448, 8.4312, 5.0],
            [19.806, 8.039, 5.0],
            [21.7672, 7.6467, 5.0],
            [23.7284, 7.2544, 5.0],
            [25.6896, 6.8622, 5.0],
            [27.6508, 6.4699, 5.0],
            [29.612, 6.0777, 5.0],
            [31.5732, 5.6854, 5.0],
            [33.0701, 5.386, 5.0],
            [33.5449, 5.291, 5.0],
            [33.8148, 5.237, 5.0],
            [33.9939, 5.2012, 5.0],
            [34.123, 5.1754, 5.0],
            [34.2411, 7.1719, 5.0],
            [34.3592, 9.1684, 5.0],
            [34.4773, 11.1649, 5.0],
            [34.5954, 13.1614, 5.0],
            [34.7136, 15.1579, 5.0],
            [34.8317, 17.1544, 5.0],
            [34.8917, 18.1684, 5.0],
            [34.9166, 18.5885, 5.0],
            [34.9314, 18.838, 5.0],
            [34.9414, 19.0071, 5.0],
            [34.9707, 21.0002, 5.0],
            [34.9781, 21.5002, 5.0],
            [34.9822, 21.7814, 5.0],
            [34.9849, 21.9671, 5.0],
            [34.9869, 22.1005, 5.0],
            [33.4183, 23.3413, 5.0],
            [31.8497, 24.5821, 5.0],
            [30.2811, 25.8228, 5.0],
            [28.7125, 27.0636, 5.0],
            [27.1439, 28.3043, 5.0],
            [26.4114, 28.8837, 5.0],
            [26.0939, 29.1348, 5.0],
            [25.9032, 29.2857, 5.0],
        ]
    )
    return [
        expected_estimated_trajectory,
        expected_true_trajectory,
    ]


@pytest.fixture(scope="session")
def expected_trajectories_wls_sigma_1():
    """This fixture defines the expected WLS trajectories for sigma = 1."""
    expected_estimated_trajectory = array(
        [
            [9.8781, 9.9289, 4.9654],
            [12.1664, 9.8262, 5.0604],
            [13.9736, 9.4045, 5.0365],
            [15.8142, 8.9398, 4.7535],
            [17.9891, 8.3574, 5.101],
            [19.9148, 8.1105, 4.8798],
            [21.9626, 7.9229, 5.2004],
            [23.799, 7.0849, 5.3149],
            [25.4815, 6.8426, 4.444],
            [27.6517, 6.3172, 5.0326],
            [29.6721, 6.1442, 4.9502],
            [31.4619, 5.5736, 5.0992],
            [33.1871, 5.2876, 5.2029],
            [33.3187, 5.3463, 5.3222],
            [33.9889, 5.1585, 5.1898],
            [34.0394, 5.2875, 4.875],
            [34.1499, 7.2542, 4.7385],
            [34.4406, 9.3263, 4.7906],
            [34.5079, 11.3262, 5.1963],
            [34.5724, 13.2434, 4.9658],
            [34.6854, 15.2607, 4.8722],
            [34.8628, 17.3057, 5.3533],
            [34.9011, 18.0882, 5.3798],
            [34.902, 18.6367, 4.8842],
            [34.902, 18.8362, 4.3368],
            [34.8266, 19.0982, 4.7899],
            [35.0532, 20.9955, 5.4153],
            [35.0444, 21.4278, 5.2775],
            [34.9495, 21.7507, 4.6063],
            [35.001, 21.9706, 4.9556],
            [34.9132, 22.0265, 4.7829],
            [33.5431, 23.4472, 5.7977],
            [31.9862, 24.7181, 4.5544],
            [30.3682, 25.7137, 4.9283],
            [28.6404, 26.8909, 4.8613],
            [27.2346, 28.1566, 4.9616],
            [26.2854, 28.9337, 5.0177],
            [25.9967, 29.2483, 4.6471],
            [25.9294, 29.5233, 5.2101],
            [25.8861, 29.4116, 5.1005],
        ]
    )
    expected_true_trajectory = array(
        [
            [10.0, 10.0, 5.0],
            [11.9626, 9.6149, 5.0027],
            [13.9194, 9.2013, 4.9975],
            [15.8769, 8.7913, 4.9941],
            [17.8359, 8.389, 5.0193],
            [19.798, 8.0017, 5.0077],
            [21.7567, 7.5978, 5.0233],
            [23.708, 7.1603, 4.9933],
            [25.6735, 6.7945, 4.938],
            [27.6338, 6.415, 5.0525],
            [29.6024, 6.0621, 5.0438],
            [31.5577, 5.6422, 5.0621],
            [33.1435, 5.3851, 5.0176],
            [33.562, 5.3187, 4.9708],
            [33.9291, 5.2431, 4.9005],
            [34.0607, 5.2225, 4.8758],
            [34.191, 7.2182, 4.8928],
            [34.3241, 9.2133, 4.9337],
            [34.4288, 11.2102, 4.9729],
            [34.5421, 13.2065, 4.9277],
            [34.6684, 15.2025, 4.9378],
            [34.8008, 17.1974, 4.9916],
            [34.8475, 18.1137, 4.8714],
            [34.8716, 18.5801, 4.7787],
            [34.8884, 18.8139, 4.7986],
            [34.9049, 19.0093, 4.9099],
            [34.9897, 20.9169, 5.0126],
            [34.9761, 21.43, 4.9063],
            [34.9672, 21.7439, 4.8509],
            [34.9755, 21.9486, 4.9154],
            [34.9754, 22.0812, 4.9211],
            [33.4172, 23.3345, 4.9552],
            [31.8346, 24.5484, 4.8074],
            [30.2413, 25.753, 4.909],
            [28.6785, 27.0009, 4.9299],
            [27.1583, 28.2992, 4.9878],
            [26.3491, 28.9668, 5.0017],
            [26.0807, 29.1894, 4.998],
            [25.9191, 29.3113, 5.0552],
            [25.7953, 29.3748, 5.0272],
        ]
    )
    return [
        expected_estimated_trajectory,
        expected_true_trajectory,
    ]
