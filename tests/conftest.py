"""Contains the fixtures needed for the tests."""

import collections
import os

import pytest
from numpy import array, insert

from autonav.file_handlers import readpathfile


@pytest.fixture(scope="session")
def default_values():
    """Defines the default values to be used in the GTRS and WLS tests."""
    root_dir = os.path.dirname(os.path.realpath(__file__))
    filename = root_dir + "/path_files/Path_small.csv"
    destinations = readpathfile(filename)
    n = 8  # Number of anchors
    b = 200  # Area border in meters
    k = 50  # Number of measurement samples
    a_i = array(
        [
            [0, 0, 0],
            [0, b, 0],
            [b / 2, 0, 0],
            [b / 2, b, 0],
            [0, 0, b / 8],
            [0, b, b / 8],
            [b / 2, 0, b / 8],
            [b / 2, b, b / 8],
        ]
    ).T
    initial_uav_position = [10, 10, 5]
    v_max = 2
    tau = 4
    gamma = 2
    Defaults = collections.namedtuple(
        "Defaults", ["a_i", "n", "k", "destinations", "initial_uav_position", "v_max", "tau", "gamma"]
    )
    defaults = Defaults(a_i, n, k, destinations, initial_uav_position, v_max, tau, gamma)
    return defaults


@pytest.fixture(scope="session")
def ideal_trajectory():
    """Contains the ideal trajectory for the plots.py tests."""
    root_dir = os.path.dirname(os.path.realpath(__file__))
    filename = root_dir + "/path_files/Path_small.csv"
    ideal_trajectory = readpathfile(filename)
    ideal_trajectory = insert(ideal_trajectory, 0, [10, 10, 5], axis=0)
    return ideal_trajectory


@pytest.fixture(scope="session", params=[5, 24612, 93456558])
def seeds(request):
    """Contains the seeds for the GTRS and WLS tests."""
    return request.param


@pytest.fixture(scope="session", params=["normal", "standard_normal", "exponential"])
def noise_distributions(request):
    """Contains the noise distributions for the GTRS and WLS tests."""
    return request.param


@pytest.fixture(scope="session", params=[[], [10**-3]])
def distribution_parameters(request):
    """Contains the distribution parameters for the GTRS and WLS tests."""
    return request.param


@pytest.fixture(scope="session")
def metrics_trajectories():
    """Contains the trajectories for the metrics.py tests."""
    estimated_trajectory = array(
        [
            [9.99999962, 9.99999996, 4.99999754],
            [11.99410947, 9.84660779, 5.00000705],
            [13.98821739, 9.69321436, 5.00000066],
            [15.98232633, 9.53982188, 5.0000055],
            [17.97643436, 9.38642838, 4.99999871],
            [19.97054325, 9.23303628, 5.00000696],
            [21.96465149, 9.07964328, 5.00000546],
            [23.95875955, 8.92624995, 5.00000067],
            [25.95286755, 8.77285661, 4.9999958],
            [27.94697505, 8.61946163, 4.99997503],
            [29.94108338, 8.46607013, 4.99998826],
        ]
    )
    true_trajectory = array(
        [
            [10.0, 10.0, 5.0],
            [11.99410897, 9.846607, 5.00000008],
            [13.98821794, 9.69321398, 4.99999985],
            [15.98232691, 9.53982097, 4.99999983],
            [17.97643588, 9.38642795, 4.99999964],
            [19.97054485, 9.23303494, 4.99999969],
            [21.96465382, 9.0796419, 4.99999944],
            [23.95876279, 8.92624886, 4.99999923],
            [25.95287175, 8.77285584, 4.99999921],
            [27.94698072, 8.61946283, 4.99999938],
            [29.9410897, 8.46606991, 5.00000044],
        ]
    )
    return [estimated_trajectory, true_trajectory]


@pytest.fixture(scope="session")
def expected_trajectories_gtrs_standard_normal():
    """Defines the expected GTRS trajectories for the standard_normal distribution."""
    expected_estimated_trajectory = array(
        [
            [10.03007671, 9.93238683, 5.31156604],
            [12.02230637, 9.75555624, 5.60451462],
            [13.94243934, 9.27820799, 5.00018368],
            [15.90987812, 8.80141154, 5.20195889],
            [17.8921327, 8.35639148, 4.66337409],
            [19.9232372, 7.90695654, 5.06765232],
            [21.7133366, 7.66929661, 5.01784219],
            [23.67638541, 7.26507731, 5.05473302],
            [25.74375886, 6.8947868, 5.36652292],
            [27.78667097, 6.54316347, 5.04789359],
            [29.66795729, 5.99819918, 4.7035292],
            [31.65420646, 5.66900732, 5.12664056],
            [33.088573, 5.65155411, 4.69009929],
            [33.39444252, 5.12060234, 4.98205005],
            [33.68634391, 4.96954471, 5.21278],
            [34.01275854, 5.11034404, 5.31470168],
            [34.2330046, 5.09651904, 4.87528713],
            [34.22250035, 7.13359263, 5.12854303],
            [34.51179548, 9.17852515, 4.61777896],
            [34.51585281, 11.32557477, 4.99115855],
            [34.56075649, 13.19364599, 5.29949599],
            [34.58949707, 15.16061325, 5.28035418],
            [34.81398654, 17.12411, 4.71198884],
            [34.87796502, 18.42313625, 4.27813488],
            [34.86638569, 18.55256818, 5.23382973],
            [34.98615246, 18.68424931, 5.04193653],
            [34.76452907, 19.09814423, 5.55845033],
            [35.17170649, 20.91075745, 4.79072394],
            [35.14497303, 21.51051017, 4.41186693],
            [35.09077929, 21.78504848, 4.61069052],
            [34.99132047, 21.88228548, 5.22307231],
            [33.39014887, 23.15360725, 5.1322024],
            [31.86602685, 24.72592091, 5.12654801],
            [30.40477465, 25.71517816, 4.78744653],
            [28.69998275, 26.9709084, 4.38882155],
            [27.21868439, 28.23774826, 5.70450563],
            [26.1694318, 28.86293449, 5.05490329],
            [26.24652293, 29.14183032, 4.40260201],
            [26.09998078, 29.12115793, 5.71059012],
        ]
    )
    expected_true_trajectory = array(
        [
            [10, 10, 5],
            [11.96193966, 9.61245194, 4.9755196],
            [13.91978464, 9.20724844, 4.92401112],
            [15.8797431, 8.80904895, 4.92399403],
            [17.84112646, 8.41847913, 4.90324409],
            [19.80334688, 8.03351122, 4.94185406],
            [21.7671574, 7.65486815, 4.93304207],
            [23.72797678, 7.26093866, 4.93040895],
            [25.6891043, 6.86865178, 4.92092979],
            [27.64700061, 6.46786316, 4.84340222],
            [29.60270575, 6.04947483, 4.83041713],
            [31.56562483, 5.68200136, 4.93955882],
            [32.99359823, 5.39647129, 4.88550906],
            [33.48174441, 5.23007537, 4.96465247],
            [33.80489913, 5.20580142, 4.9682653],
            [34.02347927, 5.2108689, 4.93286069],
            [34.15207308, 5.19649596, 4.89186901],
            [34.25486181, 7.19378291, 4.90858238],
            [34.37549305, 9.190042, 4.88863857],
            [34.46557415, 11.1867672, 4.95916411],
            [34.57702697, 13.18365832, 4.96119945],
            [34.70570371, 15.1775852, 4.87346186],
            [34.87446651, 17.16711653, 4.75820481],
            [34.94180932, 18.20828049, 4.86247404],
            [34.96832948, 18.55095829, 5.01934692],
            [34.99291907, 18.81733515, 4.97631427],
            [34.99519784, 19.033857, 4.96941313],
            [35.11142171, 20.95973707, 4.69377292],
            [35.0662048, 21.50991478, 4.74888334],
            [35.03706616, 21.8092926, 4.86709428],
            [35.02255252, 22.00353707, 4.92933644],
            [33.47053977, 23.26451118, 4.89468526],
            [31.92108781, 24.52886975, 4.87027077],
            [30.33517456, 25.74707529, 4.84104074],
            [28.76867958, 26.9889683, 4.90264625],
            [27.23362869, 28.2456795, 5.15621231],
            [26.42390294, 28.88882669, 4.89909761],
            [26.18533531, 29.1207915, 4.88789718],
            [25.93182227, 29.29532274, 5.00939368],
        ]
    )
    return [
        expected_estimated_trajectory,
        expected_true_trajectory,
    ]


@pytest.fixture(scope="session")
def expected_trajectories_wls_standard_normal():
    """Defines the expected WLS trajectories for sigma = 0."""
    expected_estimated_trajectory = array(
        [
            [10.0504655, 9.87514333, 5.31149621],
            [11.98879487, 9.73937697, 5.04599102],
            [13.83362721, 9.24253407, 5.04162216],
            [15.7468766, 8.80172164, 4.94832824],
            [17.85335031, 8.32375025, 4.93945979],
            [19.90994092, 7.91387228, 5.10122456],
            [21.67428279, 7.70725641, 4.64839878],
            [23.78774637, 7.33673074, 5.11067756],
            [25.71249119, 6.88410383, 5.11509778],
            [27.70261474, 6.49250454, 4.9557417],
            [29.72577395, 6.02818799, 4.75813502],
            [31.54336363, 5.64228894, 4.99311052],
            [33.0140452, 5.6066303, 5.22195116],
            [33.49322328, 5.12540939, 4.75582404],
            [33.99533714, 5.04456526, 4.95361225],
            [34.14273971, 5.12262813, 5.23293204],
            [33.9063891, 5.08669277, 4.98688859],
            [34.08981715, 5.11109203, 5.19682892],
            [34.39846786, 7.20896402, 5.03871863],
            [34.38361054, 9.36485782, 5.30673693],
            [34.47989417, 11.2323787, 4.89564659],
            [34.64385161, 13.24810132, 5.09497254],
            [34.61642817, 15.11246793, 5.00394223],
            [34.75646206, 17.3315411, 4.47312555],
            [34.93974537, 18.10292831, 5.2622093],
            [35.00410503, 18.37818354, 5.43002254],
            [34.84524674, 18.91343347, 5.32084047],
            [35.0410698, 18.93412014, 5.33283788],
            [35.07253361, 21.09263139, 4.35884689],
            [34.9675353, 21.42310287, 4.61113579],
            [35.05706942, 21.697542, 5.32393652],
            [34.98168687, 22.02085178, 5.47673236],
            [33.30995045, 23.39347893, 5.12713782],
            [31.92095318, 24.46312257, 5.10393434],
            [30.29695405, 25.72799027, 4.94911831],
            [28.69934561, 26.98791643, 5.31148452],
            [27.07161187, 28.34052678, 4.88324182],
            [26.58075042, 28.9108076, 4.52460999],
            [26.18509316, 28.90362771, 5.53789172],
            [25.71455786, 29.4075491, 4.41515983],
        ]
    )
    expected_true_trajectory = array(
        [
            [10, 10, 5],
            [11.96273112, 9.616482, 4.9754952],
            [13.92161159, 9.2130319, 4.97158011],
            [15.88260415, 8.81997553, 4.96772396],
            [17.84471126, 8.43253787, 4.97298989],
            [19.80815134, 8.05193964, 4.97992227],
            [21.77183297, 7.67275508, 4.96674983],
            [23.73113925, 7.27470187, 5.01844645],
            [25.68897923, 6.86667107, 4.99912036],
            [27.64890895, 6.46907133, 4.97483144],
            [29.60831173, 6.06832264, 4.98671513],
            [31.56937239, 5.68602218, 5.07664527],
            [33.08848184, 5.40375148, 5.07967303],
            [33.60690729, 5.2453931, 5.02173358],
            [33.8953752, 5.22138384, 5.06848034],
            [34.02180198, 5.21577575, 5.07431777],
            [34.02180198, 5.21577575, 5.07431777],
            [34.17177979, 5.2038867, 5.07611587],
            [34.29380456, 7.19998631, 5.04972776],
            [34.38775556, 9.19776924, 5.04368045],
            [34.50342903, 11.19359141, 4.98611729],
            [34.62185487, 13.18994076, 5.00987811],
            [34.72719379, 15.18696721, 4.98178784],
            [34.88367191, 17.18083582, 4.9801796],
            [34.96680533, 18.0917333, 5.16003195],
            [34.98123672, 18.54609492, 5.09723104],
            [34.98037576, 18.88624319, 5.00704116],
            [35.00249514, 19.04154964, 4.9611824],
            [34.98236134, 21.03478087, 4.79801406],
            [34.96410507, 21.51485421, 4.95938849],
            [34.97069727, 21.83505522, 5.03835034],
            [34.96111425, 22.0537623, 4.98395533],
            [33.39998927, 23.30169241, 4.90939491],
            [31.83456293, 24.54622716, 4.88544472],
            [30.27294532, 25.79554717, 4.86199337],
            [28.71620191, 27.05106552, 4.87694719],
            [27.16857624, 28.31117429, 4.74663727],
            [26.48057087, 28.86230382, 4.78541396],
            [26.08979908, 29.13155927, 4.90293347],
            [25.83771396, 29.36477227, 4.78851673],
        ]
    )
    return [
        expected_estimated_trajectory,
        expected_true_trajectory,
    ]
